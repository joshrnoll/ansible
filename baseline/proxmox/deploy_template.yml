---
- name: Get template vmid based on node IP address and set other template vars
  set_fact:
    template_vmid: "{{ ansible_facts['vmbr0.7']['ipv4']['address'] | regex_search('\\d{1,3}$') }}000"
    template_name: ubuntu-template
    template_ostype: l26
    template_memory: 2048
    template_cores: 1
    template_storage: ceph-pool-01

- name: Check for cloud-init .img file
  file:
    path: /root/jammy-server-cloudimg-amd64.img
  register: cloudinit_image
  ignore_errors: true

- name: Re-download .img file if necessary
  get_url: 
    url: https://cloud-images.ubuntu.com/jammy/current/jammy-server-cloudimg-amd64.img
    dest: /root/jammy-server-cloudimg-amd64.img
  when: cloudinit_image.failed

- name: Create VM template if necessary
  community.general.proxmox_kvm:
    # Credentials and host/node to work from
    node: "{{ ansible_nodename }}"
    api_user: "{{ proxmox_username }}"
    api_token_id: "{{ proxmox_token_id }}"
    api_token_secret: "{{ proxmox_token_secret }}"
    api_host: "{{ ansible_facts['vmbr0.7']['ipv4']['address'] }}"

    # Basic VM info
    vmid: "{{ template_vmid }}"
    name: "{{ template_name }}"
    ostype: "{{ template_ostype }}" # See https://docs.ansible.com/ansible/latest/collections/community/general/proxmox_kvm_module.html
    
    # Hardware info
    memory: "{{ template_memory }}"
    cores: "{{ template_cores }}"
    scsihw: virtio-scsi-pci
    ide:
      ide2: '{{ template_storage }}:cloudinit,format=qcow2'
    serial: 
      serial0: socket
    vga: serial0
    boot: order=scsi0;ide2
    
    # Storage and network info
    net:
      net0: 'virtio,bridge=vmbr0'

    # Desired state
    state: present
  register: template_creation

- name: Run qm disk import
  shell:
    cmd: qm importdisk {{ template_vmid }} jammy-server-cloudimg-amd64.img ceph-pool-01
  when: template_creation.changed
  register: diskimport

- name: Run qm set imported disk to template's scsi0
  shell: 
    cmd: qm set {{ template_vmid }} --scsihw virtio-scsi-pci --scsi0 {{ template_storage }}:vm-{{ template_vmid }}-disk-0
  when: diskimport.changed

- name: Convert to template
  community.general.proxmox_kvm:
    api_user: "{{ proxmox_username }}"
    api_token_id: "{{ proxmox_token_id }}"
    api_token_secret: "{{ proxmox_token_secret }}"
    api_host: "{{ ansible_facts['vmbr0.7']['ipv4']['address'] }}"
    vmid: "{{ template_vmid }}"
    state: template
...

